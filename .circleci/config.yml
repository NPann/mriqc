version: 2
jobs:
  build:
    working_directory: /work
    docker:
      - image: docker:17.05.0-ce-git

    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      SCRATCH: "/scratch"
      DOCKER_IMAGE: "poldracklab/mriqc"
      DOCKER_TAG: "latest"
      TEST_DATA_NAME: "circle-tests"
      TEST_DATA_URL: "https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/590ce4a96c613b025147c568"
      MRIQC_API_TAG: 1.0.2

    steps:
      - checkout
      - run:
          name: Checkout MRIQCWebAPI
          command: |
            cd /work; git clone https://github.com/poldracklab/mriqcwebapi.git
            cd /work/mriqcwebapi
            git checkout ${MRIQC_API_TAG}
            if [ "${MRIQC_API_SECRET_TOKEN}" != "" ]; then sed -i -E "s/<secret_token>/$MRIQC_API_SECRET_TOKEN/" /work/mriqcwebapi/dockereve-master/.env && grep -q -i $MRIQC_API_SECRET_TOKEN /work/mriqcwebapi/dockereve-master/.env; fi
            if [ "${MRIQC_API_SECRET_TOKEN}" != "" ]; then sed -i -E "s/<secret_token>/$MRIQC_API_SECRET_TOKEN/" /work/mriqc/mriqc/interfaces/webapi.py && grep -q -i $MRIQC_API_SECRET_TOKEN /work/mriqc/mriqc/interfaces/webapi.py; fi

      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1 \
              git
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76

      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /cache/docker.tar
            - /data

      - run:
          name: Get test data
          command: mkdir -p /data/ && if [[ ! -d /data/${TEST_DATA_NAME} ]]; then wget -O ${TEST_DATA_NAME}.tar.gz "${TEST_DATA_URL}" && tar xzf ${TEST_DATA_NAME}.tar.gz -C /data/; fi

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /cache/docker.tar | true

      - run:
          name: Docker build
          command: docker build --cache-from=${DOCKER_IMAGE} -t ${DOCKER_IMAGE}:${DOCKER_TAG} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg VERSION="${CIRCLE_TAG:-$CIRCLE_SHA1}" .

      - run:
          name: Set-up MRIQCWebAPI
          command: |
            docker-compose -f /work/mriqcwebapi/dockereve-master/docker-compose.yml pull
            docker-compose -f /work/mriqcwebapi/dockereve-master/docker-compose.yml build
            nohup bash -c "docker-compose -f /work/mriqcwebapi/dockereve-master/docker-compose.yml --verbose up -d" && sleep 10

      - run:
          name: Docker save
          command: |
            mkdir -p /cache
            docker save -o /cache/docker.tar ${DOCKER_IMAGE}:${DOCKER_TAG}

      - save_cache:
         key: v1-{{ .Branch }}-{{ epoch }}
         paths:
            - /cache/docker.tar
            - /data

      - run:
          name: Participant level test
          command: bash .circleci/participant.sh
          parallel: true
          timeout: 3200
          environment:
            GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
            MRIQC_API_HOST: $( hostname -I | awk '{print $1}' )

      - run:
          name: Group level test
          command: bash .circleci/group.sh
          parallel: true
          environment:
            GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )

      - run:
          name: Check outputs
          command: bash .circleci/check_outputs.sh
          parallel: true
          timeout: 3200
          environment:
            GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )

      - run:
          name: Check IQMs
          command: bash .circleci/check_iqms.sh
          parallel: true
          environment:
            GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )

      - run:
          name: Check IQMs were sent to WebAPI
          command: bash .circleci/webapi.sh
          parallel: true
          environment:
            GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
            MRIQC_API_HOST: $( hostname -I | awk '{print $1}' )

      - deploy:
          name: Push application Docker image
          timeout: 21600
          command: |
            if [[ "${CIRCLE_TAG}" != "" ]] && [[ "${DOCKER_PASS}" != "" ]]; then
                VERSION_EXTRA=$(echo ${CIRCLE_TAG} | cut -d '-' -f 2)
                docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
                docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE}:$CIRCLE_TAG
                docker push ${DOCKER_IMAGE}:$CIRCLE_TAG
                if [ "${VERSION_EXTRA:0:2}" != "rc" ]; then
                    echo "This is not a release candidate, pushing ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                fi
            fi

      - deploy:
          name: Push package to PyPI
          command: |
            if [[ "${CIRCLE_TAG}" != "" ]] && [[ "$PYPI_PASS" != "" ]]; then
                echo "${CIRCLE_TAG}" > mriqc/VERSION
                printf "[distutils]\nindex-servers =\n    pypi\n\n[pypi]\nusername:$PYPI_USER\npassword:$PYPI_PASS\n" > ~/.pypirc
                python setup.py sdist upload -r pypi
            fi

  # general:
  #   artifacts:
  #     - "~/scratch"
  #   branches:
  #     ignore:
  #       - gh-pages # ignore gh-pages
  #       - doc/* # ignore all doc-related branches

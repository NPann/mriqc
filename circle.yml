machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    # - curl -fsSL https://get.docker.com | sh
  environment:
    SCRATCH: "$HOME/scratch"
    TEST_DATA_NAME: "circle-tests"
    TEST_DATA_URL: "https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/589241339ad5a101fad8c474"
  services:
    - docker
  post:
    # - docker info
    # Cache docker installation - must be done after cache has been deployed
    - if [[ -d /home/ubuntu/.cache/docker ]]; then sudo rsync -a --sparse --exclude 'btrfs' /home/ubuntu/.cache/docker/* /home/ubuntu/.var/lib/docker/ && sudo service docker restart; fi
    - mkdir -p /home/ubuntu/.cache/docker /home/ubuntu/.var/lib/docker/
    - sudo chown --reference=/var/lib/docker /home/ubuntu/.var/lib/docker && sudo chmod --reference=/var/lib/docker /home/ubuntu/.var/lib/docker
    - echo 'DOCKER_OPTS="-g /home/ubuntu/.var/lib/docker/ -s btrfs -D"' | sudo tee -a /etc/default/docker && sudo service docker restart
    # - docker info

dependencies:
  cache_directories:
    - "~/.cache/docker"
    - "~/data"

  pre:
    - mkdir -p ~/data
    # Create scratch folder and force group permissions
    - mkdir -p $SCRATCH && sudo setfacl -d -m group:ubuntu:rwx $SCRATCH && sudo setfacl -m group:ubuntu:rwx $SCRATCH
    - if [[ ! -d ~/data/${TEST_DATA_NAME} ]]; then wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q -O ${TEST_DATA_NAME}.tar.gz "${TEST_DATA_URL}" && tar xzf ${TEST_DATA_NAME}.tar.gz -C ~/data/; fi
    - docker images
    - sed -i -E "s/(__version__ = )'[A-Za-z0-9.-]+'/\1'$CIRCLE_TAG'/" mriqc/info.py
    - docker build --rm=false -f docker/Dockerfile -t poldracklab/mriqc:latest .
    # - e=1 && for i in {1..5}; do docker build --rm=false -f docker/Dockerfile -t poldracklab/mriqc:latest --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg VERSION=$CIRCLE_TAG . && e=0 && break || sleep 15; done && [ "$e" -eq "0" ] :
    #     timeout: 21600
    # Save cache
    - rsync -a --sparse /home/ubuntu/.var/lib/docker/* ~/.cache/docker/
    - docker images
  # override:

test:
  override:
    # Test mriqcp
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ${CIRCLE_TEST_REPORTS}:/scratch -w /root/src/mriqc --entrypoint="/usr/bin/run_tests" poldracklab/mriqc:latest :
        timeout: 2600
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/data:/data:ro -v $SCRATCH:/scratch -w /scratch poldracklab/mriqc:latest /data/${TEST_DATA_NAME} out/ participant --testing --verbose-reports :
        timeout: 3200
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/data:/data:ro -v $SCRATCH:/scratch -w /scratch poldracklab/mriqc:latest /data/${TEST_DATA_NAME} out/ group -m bold
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/data:/data:ro -v $SCRATCH:/scratch -w /scratch poldracklab/mriqc:latest /data/${TEST_DATA_NAME} out/ group -m T1w
    - diffval=1; diffval=$( cd $SCRATCH && find out/ | sort > outputs.txt && diff $HOME/mriqc/tests/circle_outputs.txt outputs.txt | wc -l ); exit $diffval
general:
  artifacts:
    - "~/scratch"
  branches:
    ignore:
      - gh-pages # ignore gh-pages

# deployment:
#   codecov:
#     branch: /.*/
#     commands:
#       - bash <(curl -s https://codecov.io/bash)
